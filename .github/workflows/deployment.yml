name: Infra deployment

on:
  workflow_dispatch:
    inputs:
#       environment:
#         type: environment
#         description: Select the environment
      choice:
        type: choice
        description: Stack Name
        options:
          - CertifiedDomainStack
          - WebAppStack
          - LandingPageStack

jobs:
  deploy:
    runs-on: ubuntu-latest
#     environment: ${{ github.event.inputs.environment }}
#     environment: staging
    permissions:
      id-token: write
      contents: read
    defaults:
      run:
        working-directory: infrastructure
    steps:
      - name: Clone the repository
        uses: actions/checkout@v2

      - name: Use Node.js and cache modules
        uses: actions/setup-node@v2
        with:
          node-version: 16
          cache: "yarn"
          cache-dependency-path: ./infrastructure/yarn.lock

      - name: Install project dependencies
        run: yarn install

      - name: Transpile lambda handlers to JS
        run: yarn build lambdas/index.ts

      - name: Configure AWS credentials
        if: github.ref == 'refs/heads/staging'
#         run: |
#           echo "Print DEPLOYER_ROLE_ARN"
#           echo ${{ secrets.DEPLOYER_ROLE_ARN }} | sed 's/./& /g'
#         env:
#           DEPLOYER_ROLE_ARN: ${{ secrets.DEPLOYER_ROLE_ARN }}
        uses: aws-actions/configure-aws-credentials@master
        with:
          role-to-assume: ${{ secrets.STAGING_DEPLOYER_ROLE_ARN }}
          aws-region: ca-central-1

      - name: Synth infrastructure stack
        if: github.ref == 'refs/heads/staging'
        run: yarn cdk synth --all --context config=staging

      - name: Deploy infrastructure stack
        if: github.ref == 'refs/heads/staging'
        run: yarn cdk deploy ${{ github.event.inputs.choice }} --context config=staging --require-approval never
#         run: yarn cdk deploy ${{ github.event.inputs.choice }} --context config=${{ github.event.inputs.environment }} --require-approval never

      - name: Configure AWS credentials
        if: github.ref == 'refs/heads/main'
        uses: aws-actions/configure-aws-credentials@master
        with:
          role-to-assume: ${{ secrets.PROD_DEPLOYER_ROLE_ARN }}
          aws-region: ca-central-1

      - name: Synth infrastructure stack
        if: github.ref == 'refs/heads/main'
        run: yarn cdk synth --all --context config=prod

      - name: Deploy infrastructure stack
        if: github.ref == 'refs/heads/main'
        run: yarn cdk deploy ${{ github.event.inputs.choice }} --context config=prod --require-approval never

  # deploy-staging:
  #   name: Deploy to Staging
  #   if: github.event.ref == 'refs/heads/staging'
  #   needs: [build]
  #   runs-on: ubuntu-latest
  #   defaults:
  #     run:
  #       working-directory: infrastructure
  #   permissions:
  #     id-token: write
  #     contents: read
  #   environment:
  #     name: Staging
  #   steps:
  #     - name: Configure AWS credentials
  #       env:
  #         DEPLOYER_ROLE_ARN: ${{ secrets.DEPLOYER_ROLE_ARN }}
  #       uses: aws-actions/configure-aws-credentials@master
  #       with:
  #         role-to-assume: $DEPLOYER_ROLE_ARN
  #         aws-region: ca-central-1

  #     - name: Synth infrastructure stack
  #       run: yarn cdk synth --all --context config=staging

  #     - name: Deploy infrastructure stack
  #       if: github.ref == 'refs/heads/staging'
  #       run: yarn cdk deploy --all --context config=staging --require-approval never

  # deploy-prod:
  #   name: Deploy to Production
  #   if: github.event.ref == 'refs/heads/main'
  #   needs: [build]
  #   runs-on: ubuntu-latest
  #   defaults:
  #     run:
  #       working-directory: infrastructure
  #   permissions:
  #     id-token: write
  #     contents: read
  #   environment:
  #     name: Production
  #   steps:
  #     - name: Configure AWS credentials
  #       env:
  #         DEPLOYER_ROLE_ARN: ${{ secrets.DEPLOYER_ROLE_ARN }}
  #       uses: aws-actions/configure-aws-credentials@master
  #       with:
  #         role-to-assume: "${ DEPLOYER_ROLE_ARN }"
  #         aws-region: ca-central-1

  #     - name: Synth infrastructure stack
  #       run: yarn cdk synth --all --context config=prod

  #     - name: Deploy infrastructure stack
  #       if: github.ref == 'refs/heads/staging'
  #       run: yarn cdk deploy --all --context config=prod --require-approval never
